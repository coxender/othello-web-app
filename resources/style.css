@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(roboto.woff2) format("woff2");
}

:root {
  --gutter-width: 1.8vmin;

  --board-rgb: 0 128 0;
  --board: rgb(var(--board-rgb));
  --board-cell-rgb: 0 102.4 0;
  --board-cell: rgb(var(--board-cell-rgb));

  --player-rgb: 0 0 0;
  --player: rgb(var(--player-rgb));
  --ai-rgb: 255 255 255;
  --ai: rgb(var(--ai-rgb));

  --surface-rgb: 18 18 18;
  --surface: rgb(var(--surface-rgb));
  --on-surface-rgb: 255 255 255;
  --on-surface: rgb(var(--on-surface-rgb));

  --accent-rgb: 0 128 0;
  --accent: rgb(var(--accent-rgb));

  font-family: "Roboto";
}

@media (prefers-color-scheme: light) {
  :root {
    --surface-rgb: 255 255 255;
    --on-surface-rgb: 0 0 0;
  }
}

* {
  box-sizing: border-box;
}

html {
  background-color: var(--surface);
  color: var(--on-surface);
}

input {
  accent-color: var(--accent);
}

input[type="checkbox"] {
  width: 16px;
  height: 16px;
}

button {
  --button-rgb: var(--accent-rgb);
  appearance: none;
  border: none;
  background-color: transparent;
  font: inherit;
  color: rgb(var(--button-rgb));
  height: 40px;
  padding-inline: 12px;
  border-radius: 100vmax;
}

button:hover {
  background-color: rgb(var(--button-rgb) / 0.08);
}

button:focus-visible,
button:active {
  background-color: rgb(var(--button-rgb) / 0.12);
  outline: none;
}

.icon-button {
  height: 48px;
  width: 48px;
  display: inline-grid;
  place-content: center;
  place-items: center;
}

.icon-button svg {
  width: 24px;
  height: 24px;
}

body {
  width: 100vw;
  height: 100vh;
  width: 100dvw;
  height: 100dvh;
  margin: 0;
  display: grid;
  place-content: center;
}

#lcp {
  position: absolute;
  color: transparent;
  pointer-events: none;
}

#board {
  --size: calc(100dvmin - 4 * var(--gutter-width));
  width: var(--size);
  height: var(--size);
  contain: strict;
  background-color: var(--board);
  padding: var(--gutter-width);
  gap: var(--gutter-width);
  display: grid;
  grid-template: repeat(8, 1fr) / repeat(8, 1fr);
  place-content: stretch;
  border-radius: var(--gutter-width);
}

@supports not (height: 100dvmin) {
  #board {
    --size: calc(100vmin - 4 * var(--gutter-width));
  }
}

button.cell {
  height: unset;
  padding: 0;
  background-color: var(--board-cell);
  border-radius: calc(var(--gutter-width) / 2);
  display: grid;
  place-content: center;
  grid-template-columns: 85%;
}

@keyframes grow {
  from {
    transform: scale(0);
  }

  to {
    transform: scale(1);
  }
}

@keyframes shrink {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(0);
  }
}

.cell::before {
  aspect-ratio: 1;
  border-radius: 100vmax;
  transition: box-shadow 0.5s ease-in-out 0s, transform 0.5s ease-in-out 0s, background-color 0s step-start 0.25s;
}

.cell.black::before,
.cell.white::before {
  content: "";
  animation: grow 0.5s ease-in-out;
}

.cell.white::before {
  background-color: var(--ai);
  transform: scaleY(1);
}

.cell.black::before {
  background-color: var(--player);
  transform: scaleY(-1);
}

.hints-enabled.player-turn .cell[tabindex="0"]::before {
  content: "";
  box-shadow: inset 0 0 8px 1px rgba(255, 255, 255, 0.25);
}

.player-turn .cell:not(.black):not(.white):focus-visible::before {
  content: "";
  outline: 2px solid white;
}

#settings-button {
  position: fixed;
  top: max(8px, env(safe-area-inset-top));
  right: max(8px, env(safe-area-inset-right));
  --button-rgb: var(--on-surface-rgb);
}

@media (min-width: 600px) {
  dialog#settings-dialog {
    margin-top: max(48px, env(safe-area-inset-top));
    margin-right: max(48px, env(safe-area-inset-right));
    transform-origin: calc(100% + 16px) -16px;
  }
}

#settings-dialog .body > * {
  margin-top: 8px;
  margin-inline: -24px;
  padding: 8px 32px;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-areas:
    "label value"
    "control control";
}

#settings-dialog .body > * input[type="range"],
#settings-dialog .body > * theme-selector {
  grid-area: control;
}

#settings-dialog #difficulty {
  gap: 4px 0;
}

#settings-dialog #color-theme {
  gap: 16px 0;
}

#settings-dialog .label {
  font-weight: 600;
}

#close-settings {
  position: absolute;
  top: 16px;
  right: 16px;
  --button-rgb: var(--on-surface-rgb);
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

dialog::backdrop {
  background-color: rgb(0 0 0 / 0.5);
  animation: fade-in 0.2s ease-out;
}

dialog.closing::backdrop {
  animation: fade-out 0.2s ease-out;
}

dialog {
  min-width: 320px;
  max-width: min(600px, calc(100vw - 96px));
  max-height: calc(100vh - 96px);
  border-radius: 28px;
  border: none;
  box-shadow: 0 11px 15px -7px rgb(0 0 0 / 20%), 0 24px 38px 3px rgb(0 0 0 / 14%), 0 9px 46px 8px rgb(0 0 0 / 12%);
  padding: 24px;
  background-color: var(--surface);
  color: var(--on-surface);
  animation: grow 0.2s ease-out;
  overscroll-behavior: contain;
}

dialog.closing {
  animation: shrink 0.2s ease-in forwards;
}

dialog .title {
  margin: 0;
  margin-bottom: 16px;
}

dialog .body {
  margin: 0;
}

dialog .buttons {
  margin-top: 24px;
  display: flex;
  justify-content: flex-end;
}

dialog h1 {
  margin: 0;
  margin-bottom: 16px;
}

#game-over-dialog table {
  width: 100%;
  line-height: 24px;
}

#game-over-dialog th {
  text-align: start;
}

#game-over-dialog td {
  text-align: end;
}

#toast-container {
  position: fixed;
  bottom: max(0px, calc(env(safe-area-inset-bottom) - 12px));
  left: max(0px, calc(env(safe-area-inset-left) - 12px));
  display: grid;
  padding: 12px;
  gap: 12px;
  justify-items: start;
}

.toast {
  border-radius: 28px;
  padding: 0 24px;
  height: 48px;
  border: solid 1px rgb(var(--on-surface-rgb) / 0.25);
  background-color: var(--surface);
  color: var(--on-surface);
}

.toast > .text {
  line-height: 48px;
}

.fab {
  position: fixed;
  right: max(16px, env(safe-area-inset-right));
  bottom: max(16px, env(safe-area-inset-bottom));
  height: 56px;
  width: auto;
  padding-right: 24px;
  padding-left: 16px;
  gap: 16px;
  grid-template-columns: auto auto;
  border-radius: 16px;
  transition: border-radius 0.1s;
  --button-rgb: 255 255 255;
  background-color: var(--accent);
}

.fab:hover {
  background-color: var(--accent);
  filter: brightness(108%);
}

.fab:focus-visible,
.fab:active {
  background-color: var(--accent);
  filter: brightness(112%);
}

.fab:active {
  border-radius: 8px;
}

#new-game {
  display: none;
}

#new-game.show {
  display: grid;
  animation: grow 0.2s ease-out;
  transform-origin: 100% 100%;
}
